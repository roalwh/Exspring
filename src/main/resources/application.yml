server:
  port: 8070

application:
  version: AppVersion 1.0.0
  title: thejoeun company

spring:
  sql:
    init:
      mode: always
        # always: embeded db가 아닌 외부 db 사용시 spring boot를 실행할때 마다 data.sql schema.sql import.sql을 항상 실행
        # never: data.sql schema.sql import.sql을 실행하지 않음
      encoding: utf-8
  datasource:
#    generate-unique-name: false
#    initialization-mode: always    # 이전버전(spring.sql.init.mode값과 같은 기능)
#    url: jdbc:h2:mem:testdb     # H2 Embeded Memory
#    driver-class-name: org.h2.Driver # H2 connect driver
#    username: sa
#    password:
#    url: jdbc:mysql://localhost:3306/mydb?zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC       # mysql
#    url: jdbc:mysql://localhost:3306/mydb?&zeroDateTimeBehavior=convertToNull&useUnicode=true&characterEncoding=UTF-8&useSSL=false      # mysql
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    username: root
#    password: 1234
    url: jdbc:mariadb://localhost:3306/mydb         # mariadb
    driver-class-name: org.mariadb.jdbc.Driver
#    driver-class-name: com.mysql.cj.jdbc.Driver
    username: root
    password: 1234
#    url: jdbc:oracle:thin:@localhost:1521:test         # oracle
#    driver-class-name: oracle.jdbc.OracleDriver
#    username: SYSTEM
#    password: test1234
  h2:
    console:
      path: /h2-console
      enabled: true
  jpa:
    show-sql: true # java코드로 짠 sql을
    defer-datasource-initialization: true # data.sql 사용을 위해서 필수적으로 등록
    properties:
      hibernate:
        format_sql: true  # sql문 pretty하게 보여줌
        use_sql_comments: true
    generate-ddl: true   # true, false
    hibernate:
      ddl-auto: create    # create, create-drop, update, validate, none
          # create: spring boot처음 실행시에 Entity로 된 클래스 및 테이블을 drop하고 create함
          # create-drop: spring boot처음 실행시에 Entity로 된 클래스 및 테이블을 drop하고 create하고 springboot종료시에 다시 drop
          # update: 연결된 db schema와 자바 entity와 비교를 하여 다른 게 있다면 다른 것만 ddl 코드를 생성
          # validate: ddl구문을 만들진 않고 연결된 db schema와 자바 entity와 비교를 하여 다른 게 있다면 오류코드만 보여줌
          # none: ddl구문을 만들지 않음.
  mvc:
    view:
      prefix: /WEB-INF/view/
      suffix: .jsp
  devtools:
    livereload:
      enabled: true


##logging.level:
logging:
  level:
    org:
##      hibernate: trace
      hibernate:
        orm:
          jdbc:
            bind: trace   # hibernate에서 ? 값 보기
#        SQL: debug
##        type: trace
#        type:
#          decriptor:
#            sql: trace
##    root: trace

